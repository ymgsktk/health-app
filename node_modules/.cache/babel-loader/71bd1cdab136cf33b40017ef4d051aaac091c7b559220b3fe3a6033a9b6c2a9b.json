{"ast":null,"code":"import axios from 'axios';\n\n// DjangoのログインAPIエンドポイントを指定\nconst LOGIN_URL = 'http://localhost:8000/api/login';\nexport const login = async (username, password) => {\n  try {\n    const response = await axios.post(LOGIN_URL, {\n      \"username\": username,\n      \"password\": password\n    });\n    const token = response.data.token;\n    if (token) {\n      localStorage.setItem('token', token);\n      return {\n        access: token,\n        message: 'ログイン成功'\n      };\n    } else {\n      return {\n        messageErr: 'トークンが見つかりませんでした'\n      };\n    }\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      var _error$response, _error$response$data;\n      console.error('Axios error:', error.response, error.request, error.message);\n      return {\n        messageErr: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'ログイン失敗'\n      };\n    } else {\n      console.error('Unexpected error:', error);\n      return {\n        messageErr: '予期しないエラーが発生しました'\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","LOGIN_URL","login","username","password","response","post","token","data","localStorage","setItem","access","message","messageErr","error","isAxiosError","_error$response","_error$response$data","console","request","detail"],"sources":["/usr/src/app/health-app/src/API/api-back.ts"],"sourcesContent":["import axios, { AxiosError } from 'axios';\n\n\n// DjangoのログインAPIエンドポイントを指定\nconst LOGIN_URL = 'http://localhost:8000/api/login'; \n\ninterface LoginResponse {\n  access?: string;\n  message?: string;\n  messageErr?: string;\n}\n\nexport const login = async (username: string, password: string): Promise<LoginResponse> => {\n\n  try {\n    const response = await axios.post(LOGIN_URL, {\n      \"username\": username,\n      \"password\": password\n    });\n    const token = response.data.token;\n\n    if (token) {\n      localStorage.setItem('token', token);\n      return { \n        access: token, \n        message: 'ログイン成功' \n      };\n    } else {\n      return { \n        messageErr: 'トークンが見つかりませんでした' \n      };\n    }\n  } catch (error: unknown) {\n    if (axios.isAxiosError(error)) {\n      console.error('Axios error:', error.response, error.request, error.message);\n      return {\n        messageErr: error.response?.data?.detail || 'ログイン失敗'\n      };\n    } else {\n      console.error('Unexpected error:', error);\n      return {\n        messageErr: '予期しないエラーが発生しました'\n      };\n    }\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAsB,OAAO;;AAGzC;AACA,MAAMC,SAAS,GAAG,iCAAiC;AAQnD,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,QAAgB,KAA6B;EAEzF,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAACL,SAAS,EAAE;MAC3C,UAAU,EAAEE,QAAQ;MACpB,UAAU,EAAEC;IACd,CAAC,CAAC;IACF,MAAMG,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACD,KAAK;IAEjC,IAAIA,KAAK,EAAE;MACTE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;MACpC,OAAO;QACLI,MAAM,EAAEJ,KAAK;QACbK,OAAO,EAAE;MACX,CAAC;IACH,CAAC,MAAM;MACL,OAAO;QACLC,UAAU,EAAE;MACd,CAAC;IACH;EACF,CAAC,CAAC,OAAOC,KAAc,EAAE;IACvB,IAAId,KAAK,CAACe,YAAY,CAACD,KAAK,CAAC,EAAE;MAAA,IAAAE,eAAA,EAAAC,oBAAA;MAC7BC,OAAO,CAACJ,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACT,QAAQ,EAAES,KAAK,CAACK,OAAO,EAAEL,KAAK,CAACF,OAAO,CAAC;MAC3E,OAAO;QACLC,UAAU,EAAE,EAAAG,eAAA,GAAAF,KAAK,CAACT,QAAQ,cAAAW,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBR,IAAI,cAAAS,oBAAA,uBAApBA,oBAAA,CAAsBG,MAAM,KAAI;MAC9C,CAAC;IACH,CAAC,MAAM;MACLF,OAAO,CAACJ,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzC,OAAO;QACLD,UAAU,EAAE;MACd,CAAC;IACH;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}