{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/health-app/src/pages/calorie-calculation/calorie-calculation.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MainLayout from '../mainlayout';\nimport { setSelectedFoodCategory } from '../../store/redux_action';\nimport \"./calorie-calculation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalorieCalculation = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [foodItems, setFoodItems] = useState([]);\n  const [selectedFood, setSelectedFood] = useState('');\n  const [date, setDate] = useState(new Date().toISOString().slice(0, 10));\n  const [amount, setAmount] = useState(0);\n  const [totalsByDate, setTotalsByDate] = useState({});\n  const [nutritionSummary, setNutritionSummary] = useState({});\n  const {\n    selectedCategory,\n    foodData\n  } = useSelector(state => state.selectfoodtype);\n  useEffect(() => {\n    const savedCategory = localStorage.getItem('selectedCategory');\n    if (savedCategory) {\n      dispatch(setSelectedFoodCategory(savedCategory));\n    } else {\n      dispatch(setSelectedFoodCategory(''));\n    }\n    const savedset_addtable = localStorage.getItem('caloriecalculation-addtable');\n    const savedset_setdate = localStorage.getItem('caloriecalculation-setdate');\n    const savedTotalsByDate = localStorage.getItem('totalsByDate');\n    if (savedset_addtable) {\n      setFoodItems(JSON.parse(savedset_addtable));\n    }\n    if (savedTotalsByDate) {\n      setTotalsByDate(JSON.parse(savedTotalsByDate));\n    }\n    if (savedset_setdate) {\n      setDate(savedset_setdate);\n    } else {\n      setDate(new Date().toISOString().slice(0, 10));\n    }\n  }, [dispatch]);\n  useEffect(() => {\n    const summary = {};\n    foodItems.forEach(item => {\n      if (!summary[item.date]) {\n        summary[item.date] = {\n          calories: 0,\n          protein: 0,\n          fat: 0\n        };\n      }\n      summary[item.date].calories += item.calories;\n      summary[item.date].protein += item.protein;\n      summary[item.date].fat += item.fat;\n    });\n    setNutritionSummary(summary);\n  }, [foodItems]);\n  const handleTypeChange = e => {\n    const selectCategory = e.target.value;\n    dispatch(setSelectedFoodCategory(selectCategory));\n    localStorage.setItem('selectedCategory', selectCategory);\n  };\n  const filteredFood = foodData.filter(food => food.type === selectedCategory);\n  const handleAddToTable = () => {\n    const selectedFoodItem = filteredFood.find(food => food.id === parseInt(selectedFood));\n    if (!selectedFoodItem) return;\n    const newItem = {\n      id: Date.now(),\n      date: date,\n      foodType: selectedFoodItem.title,\n      amount: amount,\n      calories: selectedFoodItem.calorie * amount,\n      protein: selectedFoodItem.protein * amount,\n      fat: selectedFoodItem.fat * amount\n    };\n    setFoodItems(prevFoodItems => {\n      const updatedFoodItems = [...prevFoodItems, newItem];\n      localStorage.setItem('caloriecalculation-addtable', JSON.stringify(updatedFoodItems));\n      localStorage.setItem('caloriecalculation-setdate', date);\n      const newTotalsByDate = updatedFoodItems.reduce((acc, item) => {\n        if (!acc[item.date]) {\n          acc[item.date] = {\n            calories: 0,\n            protein: 0,\n            fat: 0\n          };\n        }\n        acc[item.date].calories += item.calories / 100;\n        acc[item.date].protein += item.protein / 100;\n        acc[item.date].fat += item.fat / 100;\n        return acc;\n      }, {});\n      setTotalsByDate(newTotalsByDate);\n      localStorage.setItem('totalsByDate', JSON.stringify(newTotalsByDate));\n      return updatedFoodItems;\n    });\n  };\n  const handledeleteToTable = id => {\n    setFoodItems(prevFoodItems => {\n      const updatedFoodItems = prevFoodItems.filter(item => item.id !== id);\n      localStorage.setItem('caloriecalculation-addtable', JSON.stringify(updatedFoodItems));\n      const newTotalsByDate = updatedFoodItems.reduce((acc, item) => {\n        if (!acc[item.date]) {\n          acc[item.date] = {\n            calories: 0,\n            protein: 0,\n            fat: 0\n          };\n        }\n        acc[item.date].calories += item.calories / 100;\n        acc[item.date].protein += item.protein / 100;\n        acc[item.date].fat += item.fat / 100;\n        return acc;\n      }, {});\n      setTotalsByDate(newTotalsByDate);\n      localStorage.setItem('totalsByDate', JSON.stringify(newTotalsByDate));\n      return updatedFoodItems;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calorie-tracker-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"opt-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"calorie-title\",\n          children: \"\\u6442\\u53D6\\u30AB\\u30ED\\u30EA\\u30FC\\u8A08\\u7B97\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-calorie\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"select-kind-lit\",\n            children: \"\\u7A2E\\u985E\\u3092\\u9078\\u629E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"select-kind\",\n            value: selectedCategory,\n            onChange: handleTypeChange,\n            children: [selectedCategory === '' && /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"\\u9078\\u629E\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"meat\",\n              children: \"Meat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"egg\",\n              children: \"Egg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"fish\",\n              children: \"Fish\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"milk and cheese\",\n              children: \"Milk and Cheese\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"vegetable\",\n              children: \"Vegetable\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"select-kind-lit2\",\n            children: \"(\\u6804\\u990A\\u306F100g\\u3042\\u305F\\u308A\\u306E\\u91CF)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"food-tables\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                id: \"table-foodname\",\n                children: \"Food\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Calories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Protein\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Fat\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: filteredFood.map(food => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: food.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [food.calorie, \" cal\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [food.protein, \" g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [food.fat, \" g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 21\n              }, this)]\n            }, food.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"lavel\",\n              children: \"\\u65E5\\u4ED8\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"date\",\n              className: \"select-kind\",\n              type: \"date\",\n              value: date,\n              onChange: e => setDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"food-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"lavel\",\n              children: \"\\u98DF\\u54C1\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"select-kind\",\n              value: selectedFood,\n              onChange: e => setSelectedFood(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"\\u9078\\u629E\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 26\n              }, this), filteredFood.map(food => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: food.id,\n                children: food.title\n              }, food.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"amount-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"lavel\",\n              children: \"\\u91CF\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"amount\",\n              className: \"select-kind\",\n              type: \"number\",\n              value: amount == 0 ? '' : amount,\n              onChange: e => setAmount(Number(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-button-div\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-button\",\n              onClick: handleAddToTable,\n              children: \"\\u30C6\\u30FC\\u30D6\\u30EB\\u306B\\u8FFD\\u52A0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"food-tables\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                id: \"date\",\n                children: \"\\u65E5\\u4ED8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                id: \"food\",\n                children: \"\\u98DF\\u54C1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                id: \"amount\",\n                children: \"\\u91CF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                id: \"calorie\",\n                children: \"\\u30AB\\u30ED\\u30EA\\u30FC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                id: \"protein\",\n                children: \"\\u30BF\\u30F3\\u30D1\\u30AF\\u8CEA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                id: \"fat\",\n                children: \"\\u8102\\u8CEA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                id: \"action\",\n                children: \"\\u64CD\\u4F5C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: foodItems.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.foodType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [item.amount, \"g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [(item.calories / 100).toFixed(2), \"cal\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [(item.protein / 100).toFixed(2), \"g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [(item.fat / 100).toFixed(2), \"g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"td-button\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"edit\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"edit-button\",\n                    children: \"\\u7DE8\\u96C6\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"delete\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-button\",\n                    onClick: () => handledeleteToTable(item.id),\n                    children: \"\\u524A\\u9664\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"total-nutrition\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"total-nut-title\",\n            children: \"\\u65E5\\u4ED8\\u3054\\u3068\\u306E\\u6804\\u990A\\u7D20\\u5408\\u8A08\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"food-tables\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"date\",\n                  children: \"\\u65E5\\u4ED8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"calorie\",\n                  children: \"\\u30AB\\u30ED\\u30EA\\u30FC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"protein\",\n                  children: \"\\u30BF\\u30F3\\u30D1\\u30AF\\u8CEA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"fat\",\n                  children: \"\\u8102\\u8CEA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: Object.keys(totalsByDate).map(date => {\n                const totals = totalsByDate[date] || {\n                  calories: 0,\n                  protein: 0,\n                  fat: 0\n                };\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [totals.calories, \"cal\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [totals.protein, \"g\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [totals.fat.toFixed(1), \"g\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 41\n                  }, this)]\n                }, date, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 37\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(CalorieCalculation, \"WvOJJXIM0j5smLygsUtTTXPEoK4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CalorieCalculation;\nexport default CalorieCalculation;\nvar _c;\n$RefreshReg$(_c, \"CalorieCalculation\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","MainLayout","setSelectedFoodCategory","jsxDEV","_jsxDEV","CalorieCalculation","_s","dispatch","foodItems","setFoodItems","selectedFood","setSelectedFood","date","setDate","Date","toISOString","slice","amount","setAmount","totalsByDate","setTotalsByDate","nutritionSummary","setNutritionSummary","selectedCategory","foodData","state","selectfoodtype","savedCategory","localStorage","getItem","savedset_addtable","savedset_setdate","savedTotalsByDate","JSON","parse","summary","forEach","item","calories","protein","fat","handleTypeChange","e","selectCategory","target","value","setItem","filteredFood","filter","food","type","handleAddToTable","selectedFoodItem","find","id","parseInt","newItem","now","foodType","title","calorie","prevFoodItems","updatedFoodItems","stringify","newTotalsByDate","reduce","acc","handledeleteToTable","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","Number","onClick","toFixed","Object","keys","totals","_c","$RefreshReg$"],"sources":["/usr/src/app/health-app/src/pages/calorie-calculation/calorie-calculation.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MainLayout from '../mainlayout';\nimport { AppState } from '../../store/redux_store';\nimport { setSelectedFoodCategory } from '../../store/redux_action';\nimport \"./calorie-calculation.css\";\n\ntype FoodItem = {\n    id: number;\n    date: string;\n    foodType: string;\n    amount: number;\n    calories: number;\n    protein: number;\n    fat: number;\n  };\n\nconst CalorieCalculation: React.FC = () => {\n    const dispatch = useDispatch();\n    const [foodItems, setFoodItems] = useState<FoodItem[]>([]);\n    const [selectedFood, setSelectedFood] = useState('');\n    const [date, setDate] = useState<string>(new Date().toISOString().slice(0, 10));\n    const [amount, setAmount] = useState<number>(0);\n    const [totalsByDate, setTotalsByDate] = useState<{ [key: string]: { calories: number, protein: number, fat: number } }>({});\n    const [nutritionSummary, setNutritionSummary] = useState<{ [key: string]: { calories: number, protein: number, fat: number } }>({});\n\n    const { selectedCategory, foodData } = useSelector((state: AppState) => state.selectfoodtype);\n\n    useEffect(() => {\n        const savedCategory = localStorage.getItem('selectedCategory');\n        if (savedCategory) {\n            dispatch(setSelectedFoodCategory(savedCategory));\n        }else {\n            dispatch(setSelectedFoodCategory('')); \n        }\n        const savedset_addtable = localStorage.getItem('caloriecalculation-addtable');\n        const savedset_setdate = localStorage.getItem('caloriecalculation-setdate');\n        const savedTotalsByDate = localStorage.getItem('totalsByDate');\n\n        if(savedset_addtable){\n            setFoodItems(JSON.parse(savedset_addtable))\n        }\n\n        if (savedTotalsByDate) {\n            setTotalsByDate(JSON.parse(savedTotalsByDate));\n        }\n        if(savedset_setdate){\n            setDate(savedset_setdate)\n        }else {\n            setDate(new Date().toISOString().slice(0, 10));\n        }\n\n    }, [dispatch]);\n\n    useEffect(() => {\n        const summary: { [key: string]: { calories: number, protein: number, fat: number } } = {};\n\n        foodItems.forEach(item => {\n            if (!summary[item.date]) {\n                summary[item.date] = { calories: 0, protein: 0, fat: 0 };\n            }\n            summary[item.date].calories += item.calories;\n            summary[item.date].protein += item.protein;\n            summary[item.date].fat += item.fat;\n        });\n\n        setNutritionSummary(summary);\n    }, [foodItems]);\n  \n    const handleTypeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        const selectCategory = e.target.value;\n        dispatch(setSelectedFoodCategory(selectCategory));\n        localStorage.setItem('selectedCategory', selectCategory);\n    };\n\n      const filteredFood = foodData.filter(food => food.type === selectedCategory);\n\n      const handleAddToTable = () => {\n        const selectedFoodItem = filteredFood.find(food => food.id === parseInt(selectedFood));\n        if (!selectedFoodItem) return;\n    \n        const newItem = {\n            id: Date.now(),\n            date: date,\n            foodType: selectedFoodItem.title,\n            amount: amount,\n            calories: selectedFoodItem.calorie * amount,\n            protein: selectedFoodItem.protein * amount,\n            fat: selectedFoodItem.fat * amount\n        };\n        setFoodItems(prevFoodItems => {\n            const updatedFoodItems = [...prevFoodItems, newItem];\n            localStorage.setItem('caloriecalculation-addtable', JSON.stringify(updatedFoodItems));\n            localStorage.setItem('caloriecalculation-setdate', date);\n    \n            const newTotalsByDate = updatedFoodItems.reduce((acc, item) => {\n                if (!acc[item.date]) {\n                    acc[item.date] = { calories: 0, protein: 0, fat: 0 };\n                }\n                acc[item.date].calories += item.calories / 100;\n                acc[item.date].protein += item.protein / 100;\n                acc[item.date].fat += item.fat / 100;\n                return acc;\n            }, {} as { [key: string]: { calories: number, protein: number, fat: number } });\n    \n            setTotalsByDate(newTotalsByDate);\n            localStorage.setItem('totalsByDate', JSON.stringify(newTotalsByDate));\n    \n            return updatedFoodItems;\n        });\n    };\n    \n\n    const handledeleteToTable = (id: number) => {\n        setFoodItems(prevFoodItems => {\n            const updatedFoodItems = prevFoodItems.filter(item => item.id !== id);\n            localStorage.setItem('caloriecalculation-addtable', JSON.stringify(updatedFoodItems));\n    \n            const newTotalsByDate = updatedFoodItems.reduce((acc, item) => {\n                if (!acc[item.date]) {\n                    acc[item.date] = { calories: 0, protein: 0, fat: 0 };\n                }\n                acc[item.date].calories += item.calories / 100;\n                acc[item.date].protein += item.protein / 100;\n                acc[item.date].fat += item.fat / 100;\n                return acc;\n            }, {} as { [key: string]: { calories: number, protein: number, fat: number } });\n    \n            setTotalsByDate(newTotalsByDate);\n            localStorage.setItem('totalsByDate', JSON.stringify(newTotalsByDate));\n    \n            return updatedFoodItems;\n        });\n    };\n    \n\n  return (\n    <MainLayout>\n    <div className=\"calorie-tracker-container\">\n        <div className='opt-table'>\n            <h2 className='calorie-title'>摂取カロリー計算</h2>\n            <div className='option-calorie'>\n                <label className='select-kind-lit'>種類を選択\n                </label>\n                <select className='select-kind' value={selectedCategory} onChange={handleTypeChange}>\n                    {selectedCategory === '' && <option value=\"\">選択してください</option>}\n                    <option value=\"meat\">Meat</option>\n                    <option value=\"egg\">Egg</option>\n                    <option value=\"fish\">Fish</option>\n                    <option value=\"milk and cheese\">Milk and Cheese</option>\n                    <option value=\"vegetable\">Vegetable</option>\n                 </select>\n                 <label className='select-kind-lit2'>(栄養は100gあたりの量)\n                </label>\n            </div>\n\n            <table className=\"food-tables\">\n                <thead>\n                <tr>\n                    <th id='table-foodname'>Food</th>\n                    <th>Calories</th>\n                    <th>Protein</th>\n                    <th>Fat</th>\n                </tr>\n                </thead>\n                <tbody>\n                {filteredFood.map(food => (\n                    <tr key={food.id}>\n                    <td>{food.title}</td>\n                    <td>{food.calorie} cal</td>\n                    <td>{food.protein} g</td>\n                    <td>{food.fat} g</td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </div>\n        <div className='form-table'>\n            <div className=\"form-div\">\n                <div className='date-div'>\n                    <label className='lavel'>日付：</label>\n                    <input \n                        id='date'\n                        className='select-kind'\n                        type=\"date\" \n                        value={date} \n                        onChange={e => setDate(e.target.value)} \n                    />\n                </div>\n                <div className='food-name'>\n                    <label className='lavel'>食品：</label>\n                    <select \n                        className='select-kind'\n                        value={selectedFood} \n                        onChange={e => setSelectedFood(e.target.value)}\n                    >\n                        {<option value=\"\">選択してください</option>}\n                        {filteredFood.map(food => (\n                        <option key={food.id} value={food.id}>{food.title}</option>\n                        \n                        ))}\n                    </select>\n                </div>\n                <div className='amount-div'>\n                    <label className='lavel'>量：</label>\n                    <input \n                        id = \"amount\"\n                        className='select-kind'\n                        type=\"number\" \n                        value={amount == 0 ? '' : amount}\n                        onChange={e => setAmount(Number(e.target.value))}\n                    />\n                </div>\n                <div className='add-button-div'>\n                    <button className='add-button' onClick={handleAddToTable}>テーブルに追加</button>\n                </div>\n            </div>\n\n            <table className=\"food-tables\">\n                <thead>\n                <tr>\n                    <th id='date'>日付</th>\n                    <th id='food'>食品</th>\n                    <th id='amount'>量</th>\n                    <th id='calorie'>カロリー</th>\n                    <th id='protein'>タンパク質</th>\n                    <th id='fat'>脂質</th>\n                    <th id='action'>操作</th>\n                </tr>\n                </thead>\n                <tbody>\n                {foodItems.map((item) => (\n                    <tr key={item.id}>\n                    <td>{item.date}</td>\n                    <td>{item.foodType}</td>\n                    <td>{item.amount}g</td>\n                    <td>{(item.calories/100).toFixed(2)}cal</td>\n                    <td>{(item.protein/100).toFixed(2)}g</td>\n                    <td>{(item.fat/100).toFixed(2)}g</td>\n                    <td className='td-button'>\n                        <div className='edit'>\n                            <button className='edit-button'>編集</button>\n                        </div>\n                        <div className='delete'>\n                            <button className='delete-button' onClick={() => handledeleteToTable(item.id)}>削除</button>\n                        </div>\n                    </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n            <div className=\"total-nutrition\">\n                    <h2 className='total-nut-title'>日付ごとの栄養素合計</h2>\n                    <table className=\"food-tables\">\n                        <thead>\n                            <tr>\n                                <th className='date'>日付</th>\n                                <th className='calorie'>カロリー</th>\n                                <th className='protein'>タンパク質</th>\n                                <th className='fat'>脂質</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {Object.keys(totalsByDate).map(date => {\n                                const totals = totalsByDate[date] || { calories: 0, protein: 0, fat: 0 };\n                                return (\n                                    <tr key={date}>\n                                        <td>{date}</td>\n                                        <td>{totals.calories}cal</td>\n                                        <td>{totals.protein}g</td>\n                                        <td>{totals.fat.toFixed(1)}g</td>\n                                    </tr>\n                                );\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n        </div>\n    </div>\n    </MainLayout>\n  );\n};\n\nexport default CalorieCalculation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}