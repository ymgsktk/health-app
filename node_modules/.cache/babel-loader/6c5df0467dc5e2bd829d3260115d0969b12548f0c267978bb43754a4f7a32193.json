{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/health-app/src/pages/dashboard/dashboard.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Bar, Line, Radar } from 'react-chartjs-2';\nimport MainLayout from '../mainlayout';\nimport { updateNutrition } from '../../store/redux_action';\nimport { Chart as ChartJS, CategoryScale, LinearScale, RadialLinearScale, BarElement, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, RadialLinearScale, BarElement, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst Dashboard = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const dispatch = useDispatch();\n  const [data, setData] = useState({\n    labels: [],\n    datasets: [{\n      label: 'Calories',\n      data: [],\n      fill: true,\n      backgroundColor: 'rgba(255, 99, 132, 0.2)',\n      borderColor: 'rgb(255, 99, 132)',\n      pointBackgroundColor: 'rgb(255, 99, 132)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgb(255, 99, 132)'\n    }, {\n      label: 'Protein',\n      data: [],\n      fill: true,\n      backgroundColor: 'rgba(54, 162, 235, 0.2)',\n      borderColor: 'rgb(54, 162, 235)',\n      pointBackgroundColor: 'rgb(54, 162, 235)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgb(54, 162, 235)'\n    }, {\n      label: 'Fat',\n      data: [],\n      fill: true,\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      borderColor: 'rgb(75, 192, 192)',\n      pointBackgroundColor: 'rgb(75, 192, 192)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgb(75, 192, 192)'\n    }]\n  });\n  _s(useEffect(_s(() => {\n    _s();\n    const savedNutritionItems = localStorage.getItem('nutritionItems');\n    if (savedNutritionItems) {\n      const parsedItems = JSON.parse(savedNutritionItems);\n      dispatch(updateNutrition(parsedItems));\n      const nutritionItems = useSelector(state => state.nutrition);\n      console.log('nutrition', nutritionItems);\n\n      // カロリー、タンパク質、脂質を日付ごとに集計\n      const totalsByDate = {};\n      parsedItems.forEach(item => {\n        if (!totalsByDate[item.date]) {\n          totalsByDate[item.date] = {\n            calories: 0,\n            protein: 0,\n            fat: 0\n          };\n        }\n        totalsByDate[item.date].calories += item.calories;\n        totalsByDate[item.date].protein += item.protein;\n        totalsByDate[item.date].fat += item.fat;\n      });\n\n      // チャートデータの準備\n      const labels = Object.keys(totalsByDate);\n      const caloriesData = labels.map(date => totalsByDate[date].calories);\n      const proteinData = labels.map(date => totalsByDate[date].protein);\n      const fatData = labels.map(date => totalsByDate[date].fat);\n      setData({\n        labels,\n        datasets: [{\n          label: 'Calories',\n          data: caloriesData,\n          fill: true,\n          backgroundColor: 'rgba(255, 99, 132, 0.2)',\n          borderColor: 'rgb(255, 99, 132)',\n          pointBackgroundColor: 'rgb(255, 99, 132)',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgb(255, 99, 132)'\n        }, {\n          label: 'Protein',\n          data: proteinData,\n          fill: true,\n          backgroundColor: 'rgba(54, 162, 235, 0.2)',\n          borderColor: 'rgb(54, 162, 235)',\n          pointBackgroundColor: 'rgb(54, 162, 235)',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgb(54, 162, 235)'\n        }, {\n          label: 'Fat',\n          data: fatData,\n          fill: true,\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          borderColor: 'rgb(75, 192, 192)',\n          pointBackgroundColor: 'rgb(75, 192, 192)',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgb(75, 192, 192)'\n        }]\n      });\n    }\n  }, \"6eZ96WS7IEV7U8Mu4u+dXMyyb6c=\", false, function () {\n    return [useSelector];\n  }), [dispatch]), \"6eZ96WS7IEV7U8Mu4u+dXMyyb6c=\", false, function () {\n    return [useSelector];\n  });\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Nutrition Data Visualization'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dashboard Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to the dashboard.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"\\u65E5\\u4ED8\\uFF1A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"date\",\n          className: \"select-kind\",\n          type: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radar-chart\",\n        children: /*#__PURE__*/_jsxDEV(Radar, {\n          data: data,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line-chart\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: data,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bar-chart\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: data,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s2(Dashboard, \"MXa1sJStQsGKAzRS3ss1hXgVFVA=\", false, function () {\n  return [useDispatch];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","Bar","Line","Radar","MainLayout","updateNutrition","Chart","ChartJS","CategoryScale","LinearScale","RadialLinearScale","BarElement","PointElement","LineElement","Title","Tooltip","Legend","Filler","jsxDEV","_jsxDEV","register","Dashboard","_s2","_s","$RefreshSig$","dispatch","data","setData","labels","datasets","label","fill","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","savedNutritionItems","localStorage","getItem","parsedItems","JSON","parse","nutritionItems","state","nutrition","console","log","totalsByDate","forEach","item","date","calories","protein","fat","Object","keys","caloriesData","map","proteinData","fatData","options","responsive","plugins","legend","position","title","display","text","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","type","_c","$RefreshReg$"],"sources":["/usr/src/app/health-app/src/pages/dashboard/dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppState } from '../../store/redux_store';\nimport { Bar, Line, Radar } from 'react-chartjs-2';\nimport MainLayout from '../mainlayout';\nimport { updateNutrition } from '../../store/redux_action';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  BarElement,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  BarElement,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\ninterface ChartData {\n  labels: string[];\n  datasets: {\n    label: string;\n    data: number[];\n    fill: boolean;\n    backgroundColor: string;\n    borderColor: string;\n    pointBackgroundColor: string;\n    pointBorderColor: string;\n    pointHoverBackgroundColor: string;\n    pointHoverBorderColor: string;\n  }[];\n}\n\nconst Dashboard: React.FC = () => {\n  const dispatch = useDispatch();\n  const [data, setData] = useState<ChartData>({\n    labels: [],\n    datasets: [\n      {\n        label: 'Calories',\n        data: [],\n        fill: true,\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\n        borderColor: 'rgb(255, 99, 132)',\n        pointBackgroundColor: 'rgb(255, 99, 132)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgb(255, 99, 132)'\n      },\n      {\n        label: 'Protein',\n        data: [],\n        fill: true,\n        backgroundColor: 'rgba(54, 162, 235, 0.2)',\n        borderColor: 'rgb(54, 162, 235)',\n        pointBackgroundColor: 'rgb(54, 162, 235)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgb(54, 162, 235)'\n      },\n      {\n        label: 'Fat',\n        data: [],\n        fill: true,\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        borderColor: 'rgb(75, 192, 192)',\n        pointBackgroundColor: 'rgb(75, 192, 192)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgb(75, 192, 192)'\n      }\n    ]\n  });\n\n  useEffect(() => {\n    const savedNutritionItems = localStorage.getItem('nutritionItems');\n    if (savedNutritionItems) {\n      const parsedItems = JSON.parse(savedNutritionItems);\n      dispatch(updateNutrition(parsedItems));\n      const nutritionItems = useSelector((state: AppState) => state.nutrition);\n      console.log('nutrition', nutritionItems)\n\n      // カロリー、タンパク質、脂質を日付ごとに集計\n      const totalsByDate: { [key: string]: { calories: number; protein: number; fat: number } } = {};\n      parsedItems.forEach((item: any) => {\n        if (!totalsByDate[item.date]) {\n          totalsByDate[item.date] = { calories: 0, protein: 0, fat: 0 };\n        }\n        totalsByDate[item.date].calories += item.calories;\n        totalsByDate[item.date].protein += item.protein;\n        totalsByDate[item.date].fat += item.fat;\n      });\n\n      // チャートデータの準備\n      const labels = Object.keys(totalsByDate);\n      const caloriesData = labels.map(date => totalsByDate[date].calories);\n      const proteinData = labels.map(date => totalsByDate[date].protein);\n      const fatData = labels.map(date => totalsByDate[date].fat);\n\n      setData({\n        labels,\n        datasets: [\n          {\n            label: 'Calories',\n            data: caloriesData,\n            fill: true,\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderColor: 'rgb(255, 99, 132)',\n            pointBackgroundColor: 'rgb(255, 99, 132)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgb(255, 99, 132)'\n          },\n          {\n            label: 'Protein',\n            data: proteinData,\n            fill: true,\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\n            borderColor: 'rgb(54, 162, 235)',\n            pointBackgroundColor: 'rgb(54, 162, 235)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgb(54, 162, 235)'\n          },\n          {\n            label: 'Fat',\n            data: fatData,\n            fill: true,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgb(75, 192, 192)',\n            pointBackgroundColor: 'rgb(75, 192, 192)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgb(75, 192, 192)'\n          }\n        ]\n      });\n    }\n  }, [dispatch]);\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top' as const\n      },\n      title: {\n        display: true,\n        text: 'Nutrition Data Visualization'\n      }\n    }\n  };\n\n  return (\n    <MainLayout>\n      <div>\n        <h1>Dashboard Page</h1>\n        <p>Welcome to the dashboard.</p>\n        <div className='date-div'>\n          <label className='label'>日付：</label>\n          <input id='date' className='select-kind' type=\"date\" />\n        </div>\n        <div className='radar-chart'>\n          <Radar data={data} options={options} />\n        </div>\n        <div className='line-chart'>\n          <Line data={data} options={options} />\n        </div>\n        <div className='bar-chart'>\n          <Bar data={data} options={options} />\n        </div>\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}