{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/health-app/src/routes/index.tsx\";\nimport React from 'react';\nimport { Route, RouterProvider, createBrowserRouter, createRoutesFromElements } from \"react-router-dom\";\nimport Blog from \"../pages/home/blog\";\nimport { isAuthenticated } from \"./helpers\";\nimport Protected from \"./protected\";\nimport { PATH_URL } from \"../utils/constant\";\nimport Login from \"../pages/login/login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n  path: \"/\",\n  children: [/*#__PURE__*/_jsxDEV(Route, {\n    element: /*#__PURE__*/_jsxDEV(Protected, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Blog, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    path: PATH_URL.signIn,\n    element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 20\n    }, this),\n    loader: async () => await isAuthenticated()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    path: \"*\",\n    element: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Page not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 34\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 7\n}, this)));\nconst AppRouter = () => {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n};\n_c = AppRouter;\nexport default AppRouter;\nvar _c;\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["React","Route","RouterProvider","createBrowserRouter","createRoutesFromElements","Blog","isAuthenticated","Protected","PATH_URL","Login","jsxDEV","_jsxDEV","router","path","children","element","fileName","_jsxFileName","lineNumber","columnNumber","index","signIn","loader","AppRouter","_c","$RefreshReg$"],"sources":["/usr/src/app/health-app/src/routes/index.tsx"],"sourcesContent":["import React from 'react';\nimport {\n    Route,\n    RouterProvider,\n    createBrowserRouter,\n    createRoutesFromElements,\n  } from \"react-router-dom\";\nimport Blog from \"../pages/home/blog\";\n\nimport { isAuthenticated } from \"./helpers\";\nimport Protected from \"./protected\";\nimport { PATH_URL } from \"../utils/constant\";\nimport Login from \"../pages/login/login\";\n  \nconst router = createBrowserRouter(\n    createRoutesFromElements(\n      <Route path=\"/\">\n  \n        <Route element={<Protected />}>\n          {/* All other routes that you want to protect will go inside here */}\n          <Route index element={<Blog />} />\n        </Route>\n  \n        <Route\n          path={PATH_URL.signIn}\n          element={<Login/>}\n          loader={async () => await isAuthenticated()}\n        />\n        \n        <Route path=\"*\" element={<h1>Page not found</h1>} />\n      </Route>\n    )\n  );\n  \n  const AppRouter = () => {\n    return <RouterProvider router={router} />;\n  };\n  \n  export default AppRouter;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,KAAK,EACLC,cAAc,EACdC,mBAAmB,EACnBC,wBAAwB,QACnB,kBAAkB;AAC3B,OAAOC,IAAI,MAAM,oBAAoB;AAErC,SAASC,eAAe,QAAQ,WAAW;AAC3C,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,OAAOC,KAAK,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,MAAM,GAAGT,mBAAmB,CAC9BC,wBAAwB,eACtBO,OAAA,CAACV,KAAK;EAACY,IAAI,EAAC,GAAG;EAAAC,QAAA,gBAEbH,OAAA,CAACV,KAAK;IAACc,OAAO,eAAEJ,OAAA,CAACJ,SAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAE;IAAAL,QAAA,eAE5BH,OAAA,CAACV,KAAK;MAACmB,KAAK;MAACL,OAAO,eAAEJ,OAAA,CAACN,IAAI;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC,eAERR,OAAA,CAACV,KAAK;IACJY,IAAI,EAAEL,QAAQ,CAACa,MAAO;IACtBN,OAAO,eAAEJ,OAAA,CAACF,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAE;IAClBG,MAAM,EAAE,MAAAA,CAAA,KAAY,MAAMhB,eAAe,CAAC;EAAE;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC,eAEFR,OAAA,CAACV,KAAK;IAACY,IAAI,EAAC,GAAG;IAACE,OAAO,eAAEJ,OAAA;MAAAG,QAAA,EAAI;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAC/C,CACT,CACF,CAAC;AAED,MAAMI,SAAS,GAAGA,CAAA,KAAM;EACtB,oBAAOZ,OAAA,CAACT,cAAc;IAACU,MAAM,EAAEA;EAAO;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C,CAAC;AAACK,EAAA,GAFID,SAAS;AAIf,eAAeA,SAAS;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}