{"ast":null,"code":"import { initialUserState } from './redux_action';\nimport { initialPostState } from './redux_action';\nimport { initialMenuState } from './redux_action';\nimport { initialModalState } from './redux_action';\nimport { initialBMIState } from './redux_action';\nexport const postsReducer = (state = initialPostState, action) => {\n  switch (action.type) {\n    case 'SET_POSTS':\n      return {\n        ...state,\n        posts: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const userReducer = (state = initialUserState, action) => {\n  switch (action.type) {\n    case 'SET_USER_INFO':\n      return {\n        ...state,\n        email: action.payload.email,\n        password: action.payload.password\n      };\n    case 'SET_TOKEN':\n      return {\n        ...state,\n        token: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const menuReducer = (state = initialMenuState, action) => {\n  switch (action.type) {\n    case 'TOGGLE_MENU':\n      return {\n        ...state,\n        [action.payload]: !state[action.payload]\n      };\n    default:\n      return state;\n  }\n};\nexport const modalReducer = (state = initialModalState, action) => {\n  switch (action.type) {\n    case 'TOGGLE_MODAL':\n      return {\n        ...state,\n        isOpen: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const bmiReducer = (state = initialBMIState, action) => {\n  switch (action.type) {\n    case 'SET_HEIGHT':\n      return {\n        ...state,\n        height: action.payload\n      };\n    case 'SET_WEIGHT':\n      return {\n        ...state,\n        weight: action.payload\n      };\n    case 'CALCULATE_BMI':\n      const heightInMeters = state.height / 100;\n      const bmi = state.weight / (heightInMeters * heightInMeters);\n      return {\n        ...state,\n        bmi,\n        bmicalculated: true\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["initialUserState","initialPostState","initialMenuState","initialModalState","initialBMIState","postsReducer","state","action","type","posts","payload","userReducer","email","password","token","menuReducer","modalReducer","isOpen","bmiReducer","height","weight","heightInMeters","bmi","bmicalculated"],"sources":["/usr/src/app/health-app/src/store/redux_reducer.ts"],"sourcesContent":["import {initialUserState, UserState} from './redux_action';\nimport {initialPostState, PostsState} from './redux_action';\nimport {initialMenuState, MenuState} from './redux_action';\nimport { initialModalState, ModalState } from './redux_action';\nimport { initialBMIState, BMIState } from './redux_action';\nimport {Action} from './redux_action';\n\n\nexport const postsReducer = (state = initialPostState, action: Action): PostsState => {\n  switch (action.type) {\n    case 'SET_POSTS':\n      return { ...state, posts: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userReducer = (state = initialUserState, action: Action): UserState => {\n  switch (action.type) {\n    case 'SET_USER_INFO':\n      return { ...state, email: action.payload.email, password: action.payload.password };\n    case 'SET_TOKEN':\n      return { ...state, token: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const menuReducer = (state = initialMenuState, action: Action): MenuState => {\n  switch (action.type) {\n    case 'TOGGLE_MENU':\n      return {\n        ...state,\n        [action.payload]: !state[action.payload],\n      };\n    default:\n      return state;\n  }\n};\n\nexport const modalReducer = (state = initialModalState, action: Action): ModalState => {\n  switch (action.type) {\n    case 'TOGGLE_MODAL':\n      return { ...state, isOpen: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const bmiReducer = (state = initialBMIState, action: Action): BMIState => {\n  switch (action.type) {\n    case 'SET_HEIGHT':\n      return { ...state, height: action.payload };\n    case 'SET_WEIGHT':\n      return { ...state, weight: action.payload };\n    case 'CALCULATE_BMI':\n      const heightInMeters = state.height / 100;\n      const bmi = state.weight / (heightInMeters * heightInMeters);\n      return { ...state, bmi, bmicalculated: true };\n    default:\n      return state;\n  }\n};\n\n"],"mappings":"AAAA,SAAQA,gBAAgB,QAAkB,gBAAgB;AAC1D,SAAQC,gBAAgB,QAAmB,gBAAgB;AAC3D,SAAQC,gBAAgB,QAAkB,gBAAgB;AAC1D,SAASC,iBAAiB,QAAoB,gBAAgB;AAC9D,SAASC,eAAe,QAAkB,gBAAgB;AAI1D,OAAO,MAAMC,YAAY,GAAGA,CAACC,KAAK,GAAGL,gBAAgB,EAAEM,MAAc,KAAiB;EACpF,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,WAAW;MACd,OAAO;QAAE,GAAGF,KAAK;QAAEG,KAAK,EAAEF,MAAM,CAACG;MAAQ,CAAC;IAC5C;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMK,WAAW,GAAGA,CAACL,KAAK,GAAGN,gBAAgB,EAAEO,MAAc,KAAgB;EAClF,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,eAAe;MAClB,OAAO;QAAE,GAAGF,KAAK;QAAEM,KAAK,EAAEL,MAAM,CAACG,OAAO,CAACE,KAAK;QAAEC,QAAQ,EAAEN,MAAM,CAACG,OAAO,CAACG;MAAS,CAAC;IACrF,KAAK,WAAW;MACd,OAAO;QAAE,GAAGP,KAAK;QAAEQ,KAAK,EAAEP,MAAM,CAACG;MAAQ,CAAC;IAC5C;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMS,WAAW,GAAGA,CAACT,KAAK,GAAGJ,gBAAgB,EAAEK,MAAc,KAAgB;EAClF,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAChB,OAAO;QACL,GAAGF,KAAK;QACR,CAACC,MAAM,CAACG,OAAO,GAAG,CAACJ,KAAK,CAACC,MAAM,CAACG,OAAO;MACzC,CAAC;IACH;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMU,YAAY,GAAGA,CAACV,KAAK,GAAGH,iBAAiB,EAAEI,MAAc,KAAiB;EACrF,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,cAAc;MACjB,OAAO;QAAE,GAAGF,KAAK;QAAEW,MAAM,EAAEV,MAAM,CAACG;MAAQ,CAAC;IAC7C;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMY,UAAU,GAAGA,CAACZ,KAAK,GAAGF,eAAe,EAAEG,MAAc,KAAe;EAC/E,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,YAAY;MACf,OAAO;QAAE,GAAGF,KAAK;QAAEa,MAAM,EAAEZ,MAAM,CAACG;MAAQ,CAAC;IAC7C,KAAK,YAAY;MACf,OAAO;QAAE,GAAGJ,KAAK;QAAEc,MAAM,EAAEb,MAAM,CAACG;MAAQ,CAAC;IAC7C,KAAK,eAAe;MAClB,MAAMW,cAAc,GAAGf,KAAK,CAACa,MAAM,GAAG,GAAG;MACzC,MAAMG,GAAG,GAAGhB,KAAK,CAACc,MAAM,IAAIC,cAAc,GAAGA,cAAc,CAAC;MAC5D,OAAO;QAAE,GAAGf,KAAK;QAAEgB,GAAG;QAAEC,aAAa,EAAE;MAAK,CAAC;IAC/C;MACE,OAAOjB,KAAK;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}