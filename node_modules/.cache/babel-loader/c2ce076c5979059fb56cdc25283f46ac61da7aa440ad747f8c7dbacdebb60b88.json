{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/health-app/src/pages/dashboard/dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Bar, Line, Radar } from 'react-chartjs-2';\nimport MainLayout from '../mainlayout';\nimport { Chart as ChartJS, CategoryScale, LinearScale, RadialLinearScale, BarElement, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, RadialLinearScale, BarElement, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst Dashboard = () => {\n  _s();\n  const nutritionItems = useSelector(state => state.nutrition);\n\n  // カロリー、タンパク質、脂質を日付ごとに集計\n  const totalsByDate = {};\n  nutritionItems.forEach(item => {\n    if (!totalsByDate[item.date]) {\n      totalsByDate[item.date] = {\n        calories: 0,\n        protein: 0,\n        fat: 0\n      };\n    }\n    totalsByDate[item.date].calories += item.calories;\n    totalsByDate[item.date].protein += item.protein;\n    totalsByDate[item.date].fat += item.fat;\n  });\n\n  // チャートデータの準備\n  const labels = Object.keys(totalsByDate);\n  const caloriesData = labels.map(date => totalsByDate[date].calories);\n  const proteinData = labels.map(date => totalsByDate[date].protein);\n  const fatData = labels.map(date => totalsByDate[date].fat);\n  const data = {\n    labels,\n    datasets: [{\n      label: 'Calories',\n      data: caloriesData,\n      fill: true,\n      backgroundColor: 'rgba(255, 99, 132, 0.2)',\n      borderColor: 'rgb(255, 99, 132)',\n      pointBackgroundColor: 'rgb(255, 99, 132)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgb(255, 99, 132)'\n    }, {\n      label: 'Protein',\n      data: proteinData,\n      fill: true,\n      backgroundColor: 'rgba(54, 162, 235, 0.2)',\n      borderColor: 'rgb(54, 162, 235)',\n      pointBackgroundColor: 'rgb(54, 162, 235)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgb(54, 162, 235)'\n    }, {\n      label: 'Fat',\n      data: fatData,\n      fill: true,\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      borderColor: 'rgb(75, 192, 192)',\n      pointBackgroundColor: 'rgb(75, 192, 192)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgb(75, 192, 192)'\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Nutrition Data Visualization'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dashboard Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to the dashboard.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"lavel\",\n          children: \"\\u65E5\\u4ED8\\uFF1A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"date\",\n          className: \"select-kind\",\n          type: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radar-chart\",\n        children: /*#__PURE__*/_jsxDEV(Radar, {\n          data: data,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line-chart\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: data,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bar-chart\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: data,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"6eZ96WS7IEV7U8Mu4u+dXMyyb6c=\", false, function () {\n  return [useSelector];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useSelector","Bar","Line","Radar","MainLayout","Chart","ChartJS","CategoryScale","LinearScale","RadialLinearScale","BarElement","PointElement","LineElement","Title","Tooltip","Legend","Filler","jsxDEV","_jsxDEV","register","Dashboard","_s","nutritionItems","state","nutrition","totalsByDate","forEach","item","date","calories","protein","fat","labels","Object","keys","caloriesData","map","proteinData","fatData","data","datasets","label","fill","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","options","responsive","plugins","legend","position","title","display","text","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","type","_c","$RefreshReg$"],"sources":["/usr/src/app/health-app/src/pages/dashboard/dashboard.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppState } from '../../store/redux_store';\nimport { Bar, Line, Radar } from 'react-chartjs-2';\nimport MainLayout from '../mainlayout';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  BarElement,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  RadialLinearScale,\n  BarElement,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nconst Dashboard: React.FC = () => {\n  const nutritionItems = useSelector((state: AppState) => state.nutrition);\n\n  // カロリー、タンパク質、脂質を日付ごとに集計\n  const totalsByDate: { [key: string]: { calories: number; protein: number; fat: number } } = {};\n  nutritionItems.forEach(item => {\n    if (!totalsByDate[item.date]) {\n      totalsByDate[item.date] = { calories: 0, protein: 0, fat: 0 };\n    }\n    totalsByDate[item.date].calories += item.calories;\n    totalsByDate[item.date].protein += item.protein;\n    totalsByDate[item.date].fat += item.fat;\n  });\n\n  // チャートデータの準備\n  const labels = Object.keys(totalsByDate);\n  const caloriesData = labels.map(date => totalsByDate[date].calories);\n  const proteinData = labels.map(date => totalsByDate[date].protein);\n  const fatData = labels.map(date => totalsByDate[date].fat);\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: 'Calories',\n        data: caloriesData,\n        fill: true,\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\n        borderColor: 'rgb(255, 99, 132)',\n        pointBackgroundColor: 'rgb(255, 99, 132)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgb(255, 99, 132)'\n      },\n      {\n        label: 'Protein',\n        data: proteinData,\n        fill: true,\n        backgroundColor: 'rgba(54, 162, 235, 0.2)',\n        borderColor: 'rgb(54, 162, 235)',\n        pointBackgroundColor: 'rgb(54, 162, 235)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgb(54, 162, 235)'\n      },\n      {\n        label: 'Fat',\n        data: fatData,\n        fill: true,\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        borderColor: 'rgb(75, 192, 192)',\n        pointBackgroundColor: 'rgb(75, 192, 192)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgb(75, 192, 192)'\n      }\n    ]\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top' as const\n      },\n      title: {\n        display: true,\n        text: 'Nutrition Data Visualization'\n      }\n    }\n  };\n\n  return (\n    <MainLayout>\n      <div>\n        <h1>Dashboard Page</h1>\n        <p>Welcome to the dashboard.</p>\n        <div className='date-div'>\n          <label className='lavel'>日付：</label>\n          <input id='date' className='select-kind' type=\"date\" />\n        </div>\n        <div className='radar-chart'>\n          <Radar data={data} options={options} />\n        </div>\n        <div className='line-chart'>\n          <Line data={data} options={options} />\n        </div>\n        <div className='bar-chart'>\n          <Bar data={data} options={options} />\n        </div>\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}