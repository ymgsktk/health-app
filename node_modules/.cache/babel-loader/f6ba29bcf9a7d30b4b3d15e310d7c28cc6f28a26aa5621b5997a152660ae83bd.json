{"ast":null,"code":"import { material } from '../API/apidata';\n\n//インターフェイス\n\n//初期状態\nexport const initialPostState = {\n  posts: []\n};\nexport const initialUserState = {\n  email: '',\n  password: '',\n  token: null\n};\nexport const initialMenuState = {\n  menu1: false,\n  menu2: false\n};\nexport const initialModalState = {\n  isOpen: false,\n  content: null\n};\n/*\nexport const initialBMIState: BMIState = {\n  height: 0,\n  weight: 0,\n  bmi: null,\n  bmicalculated: false,\n};*/\n\nexport const initialBMRState = {\n  height: 0,\n  weight: 0,\n  age: 0,\n  gender: \"\",\n  level: \"\",\n  bmr: null,\n  bmrcalculated: false\n};\nexport const initialFoodState = {\n  selectedCategory: \"vegetable\",\n  foodData: material\n};\nexport const initialNutritionState = [];\n\n//アクション\n\nexport const toggleModal = (isOpen, content) => ({\n  type: 'TOGGLE_MODAL',\n  payload: isOpen\n});\nexport const toggleMenu = menu => ({\n  type: 'TOGGLE_MENU',\n  payload: menu\n});\nexport const setSelectedFoodCategory = category => ({\n  type: 'SELECT_FOOD_TYPE',\n  payload: category\n});\nexport const updateNutrition = nutrition => ({\n  type: 'UPDATE_NUTRITION',\n  payload: nutrition\n});\nexport const addNutritionItem = nutrition => ({\n  type: 'ADD_NUTRITION_ITEM',\n  payload: nutrition\n});\nexport const removeNutrition = id => ({\n  type: 'REMOVE_NUTRITION',\n  payload: id\n});\nexport const resetNutrition = () => ({\n  type: 'RESET_NUTRITION'\n});","map":{"version":3,"names":["material","initialPostState","posts","initialUserState","email","password","token","initialMenuState","menu1","menu2","initialModalState","isOpen","content","initialBMRState","height","weight","age","gender","level","bmr","bmrcalculated","initialFoodState","selectedCategory","foodData","initialNutritionState","toggleModal","type","payload","toggleMenu","menu","setSelectedFoodCategory","category","updateNutrition","nutrition","addNutritionItem","removeNutrition","id","resetNutrition"],"sources":["/usr/src/app/health-app/src/store/redux_action.ts"],"sourcesContent":["import { Post } from '../interface/post';\nimport { material } from '../API/apidata'\n\n//インターフェイス\nexport interface UserState {\n  email: string;\n  password: string;\n  token: string | null;\n}\n\nexport interface PostsState {\n  posts: Post[];\n}\n\nexport interface MenuState {\n  menu1: boolean;\n  menu2: boolean;\n}\n\nexport interface ModalState {\n  isOpen: boolean;\n  content?: any;\n}\n\nexport interface BMIStates {\n  height: number;\n  weight: number;\n  bmi: number | null;\n  bmicalculated: boolean;\n}\n\nexport interface BMRState{\n  height: number;\n  weight: number;\n  age: number;\n  gender: string | null;\n  level: string | null;\n  bmr: number | null;\n  bmrcalculated: boolean;\n}\n\nexport interface FoodState{\n  selectedCategory: string;\n  foodData: Array<{\n    id: number;\n    title: string;\n    calorie: number;\n    protein: number;\n    fat: number;\n    type: string;\n  }>\n}\n\nexport interface NutritionState{\n  id: number;\n  foodtype: string;\n  date: string;\n  title: string;\n  amount: number;\n  calories: number;\n  protein: number;\n  fat: number;\n}\n\n//初期状態\nexport const initialPostState: PostsState = {\n  posts: [],\n};\n\nexport const initialUserState: UserState = {\n  email: '',\n  password: '',\n  token: null,\n};\n\nexport const initialMenuState: MenuState = {\n  menu1: false,\n  menu2: false,\n};\n\nexport const initialModalState: ModalState = {\n  isOpen: false,\n  content: null\n};\n/*\nexport const initialBMIState: BMIState = {\n  height: 0,\n  weight: 0,\n  bmi: null,\n  bmicalculated: false,\n};*/\n\nexport  const initialBMRState: BMRState = {\n  height: 0,\n  weight: 0,\n  age: 0,\n  gender: \"\",\n  level: \"\",\n  bmr: null,\n  bmrcalculated: false,\n}\n\nexport const initialFoodState: FoodState = {\n  selectedCategory: \"vegetable\",\n  foodData : material,\n}\n\nexport const initialNutritionState: NutritionState[] = [];\n\n//アクション\nexport type Action =\n  | { type: 'SET_USER_INFO'; payload: { email: string; password: string } }\n  | { type: 'SET_TOKEN'; payload: string }\n  | { type: 'SET_POSTS'; payload: Post[] }\n  | { type: 'TOGGLE_MENU'; payload: keyof MenuState }\n  | { type: 'TOGGLE_MODAL'; payload: boolean }\n  | { type: 'SET_HEIGHT'; payload: number }\n  | { type: 'SET_WEIGHT'; payload: number }\n  | { type: 'SET_HEIGHT-BMR'; payload: number }\n  | { type: 'SET_WEIGHT-BMR'; payload: number }\n  | { type: 'SET_AGE-BMR'; payload: number }\n  | { type: 'SET_LEVEL-BMR'; payload: string }\n  | { type: 'SET_GENDER-BMR'; payload: string }\n  | { type: 'CALCULATE_BMI'; payload:boolean }\n  | { type: 'CALCULATE_BMR'; payload:boolean }\n  | { type: 'RESET_BMR'; payload:boolean }\n  | { type: 'SELECT_FOOD_TYPE'; payload:string }\n  | { type: 'UPDATE_NUTRITION'; payload: NutritionState }  \n  | { type: 'ADD_NUTRITION_ITEM'; payload: NutritionState }  \n  | { type: 'REMOVE_NUTRITION' ; payload: number}\n  | { type: 'RESET_NUTRITION'}\n\n\n\nexport const toggleModal = (isOpen: boolean, content?: any) => ({\n    type: 'TOGGLE_MODAL',\n    payload: isOpen,\n  });\n\nexport const toggleMenu = (menu: string) => ({\n    type: 'TOGGLE_MENU',\n    payload: menu,\n  });\n  \nexport const setSelectedFoodCategory = (category: string) => ({\n    type: 'SELECT_FOOD_TYPE',\n    payload: category,\n  });\n\nexport const updateNutrition = (nutrition: NutritionState[]) => ({\n  type: 'UPDATE_NUTRITION',\n  payload: nutrition,\n});\n  \nexport const addNutritionItem = (nutrition: NutritionState) => ({\n  type: 'ADD_NUTRITION_ITEM',\n  payload: nutrition,\n});\n  \nexport const removeNutrition = (id: number) => ({\n  type: 'REMOVE_NUTRITION',\n  payload: id,\n});\nexport const resetNutrition = () => ({\n  type: 'RESET_NUTRITION'\n});"],"mappings":"AACA,SAASA,QAAQ,QAAQ,gBAAgB;;AAEzC;;AA6DA;AACA,OAAO,MAAMC,gBAA4B,GAAG;EAC1CC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,gBAA2B,GAAG;EACzCC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,gBAA2B,GAAG;EACzCC,KAAK,EAAE,KAAK;EACZC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,iBAA6B,GAAG;EAC3CC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;AACX,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAQ,MAAMC,eAAyB,GAAG;EACxCC,MAAM,EAAE,CAAC;EACTC,MAAM,EAAE,CAAC;EACTC,GAAG,EAAE,CAAC;EACNC,MAAM,EAAE,EAAE;EACVC,KAAK,EAAE,EAAE;EACTC,GAAG,EAAE,IAAI;EACTC,aAAa,EAAE;AACjB,CAAC;AAED,OAAO,MAAMC,gBAA2B,GAAG;EACzCC,gBAAgB,EAAE,WAAW;EAC7BC,QAAQ,EAAGvB;AACb,CAAC;AAED,OAAO,MAAMwB,qBAAuC,GAAG,EAAE;;AAEzD;;AAyBA,OAAO,MAAMC,WAAW,GAAGA,CAACd,MAAe,EAAEC,OAAa,MAAM;EAC5Dc,IAAI,EAAE,cAAc;EACpBC,OAAO,EAAEhB;AACX,CAAC,CAAC;AAEJ,OAAO,MAAMiB,UAAU,GAAIC,IAAY,KAAM;EACzCH,IAAI,EAAE,aAAa;EACnBC,OAAO,EAAEE;AACX,CAAC,CAAC;AAEJ,OAAO,MAAMC,uBAAuB,GAAIC,QAAgB,KAAM;EAC1DL,IAAI,EAAE,kBAAkB;EACxBC,OAAO,EAAEI;AACX,CAAC,CAAC;AAEJ,OAAO,MAAMC,eAAe,GAAIC,SAA2B,KAAM;EAC/DP,IAAI,EAAE,kBAAkB;EACxBC,OAAO,EAAEM;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,gBAAgB,GAAID,SAAyB,KAAM;EAC9DP,IAAI,EAAE,oBAAoB;EAC1BC,OAAO,EAAEM;AACX,CAAC,CAAC;AAEF,OAAO,MAAME,eAAe,GAAIC,EAAU,KAAM;EAC9CV,IAAI,EAAE,kBAAkB;EACxBC,OAAO,EAAES;AACX,CAAC,CAAC;AACF,OAAO,MAAMC,cAAc,GAAGA,CAAA,MAAO;EACnCX,IAAI,EAAE;AACR,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}