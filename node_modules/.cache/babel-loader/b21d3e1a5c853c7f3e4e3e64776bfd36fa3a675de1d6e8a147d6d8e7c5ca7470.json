{"ast":null,"code":"import { initialDateRadarChartState, initialUserState } from './redux_action';\nimport { initialPostState } from './redux_action';\nimport { initialMenuState } from './redux_action';\nimport { initialModalState } from './redux_action';\nimport { initialBMIState } from './redux_action';\nimport { initialBMRState } from './redux_action';\nimport { initialFoodState } from './redux_action';\nimport { initialNutritionState } from './redux_action';\nimport { initialNutRadarChartState } from './redux_action';\nimport { initialWeekLineChartState } from './redux_action';\nexport const postsReducer = (state = initialPostState, action) => {\n  switch (action.type) {\n    case 'SET_POSTS':\n      return {\n        ...state,\n        posts: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const userReducer = (state = initialUserState, action) => {\n  switch (action.type) {\n    case 'SET_USER_INFO':\n      return {\n        ...state,\n        email: action.payload.email,\n        password: action.payload.password\n      };\n    case 'SET_TOKEN':\n      return {\n        ...state,\n        token: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const menuReducer = (state = initialMenuState, action) => {\n  switch (action.type) {\n    case 'TOGGLE_MENU':\n      return {\n        ...state,\n        [action.payload]: !state[action.payload]\n      };\n    default:\n      return state;\n  }\n};\nexport const modalReducer = (state = initialModalState, action) => {\n  switch (action.type) {\n    case 'TOGGLE_MODAL':\n      return {\n        ...state,\n        isOpen: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const bmiReducer = (state = initialBMIState, action) => {\n  switch (action.type) {\n    case 'SET_HEIGHT':\n      return {\n        ...state,\n        height: action.payload\n      };\n    case 'SET_WEIGHT':\n      return {\n        ...state,\n        weight: action.payload\n      };\n    case 'CALCULATE_BMI':\n      const heightInMeters = state.height / 100;\n      const bmi = state.weight / (heightInMeters * heightInMeters);\n      return {\n        ...state,\n        bmi,\n        bmicalculated: true\n      };\n    default:\n      return state;\n  }\n};\nexport const bmrReducer = (state = initialBMRState, action) => {\n  switch (action.type) {\n    case 'SET_HEIGHT-BMR':\n      return {\n        ...state,\n        height: action.payload\n      };\n    case 'SET_WEIGHT-BMR':\n      return {\n        ...state,\n        weight: action.payload\n      };\n    case 'SET_AGE-BMR':\n      return {\n        ...state,\n        age: action.payload\n      };\n    case 'SET_GENDER-BMR':\n      return {\n        ...state,\n        gender: action.payload\n      };\n    case 'SET_LEVEL-BMR':\n      return {\n        ...state,\n        level: action.payload\n      };\n    case 'CALCULATE_BMR':\n      const {\n        height,\n        weight,\n        age,\n        gender,\n        level\n      } = state;\n      console.log(height, weight, age, gender);\n      let bmr = null;\n      let bmrcalculated = false;\n      if (gender === 'male') {\n        bmr = 10 * weight + 6.25 * height - 5 * age + 5;\n        bmrcalculated = true;\n      } else if (gender === 'female') {\n        bmr = 10 * weight + 6.25 * height - 5 * age - 161;\n        bmrcalculated = true;\n      }\n      console.log(bmr);\n      if (bmr !== null) {\n        switch (level) {\n          case \"level1\":\n            bmr = bmr * 1.2;\n            break;\n          case \"level2\":\n            bmr = bmr * 1.4;\n            break;\n          case \"level3\":\n            bmr = bmr * 1.6;\n            break;\n          case \"level4\":\n            bmr = bmr * 1.8;\n            break;\n          case \"level5\":\n            bmr = bmr * 1.9;\n            break;\n          default:\n            break;\n        }\n      } else {\n        console.log('bmr is null');\n      }\n      return {\n        ...state,\n        bmr,\n        bmrcalculated: true\n      };\n    case 'RESET_BMR':\n      return initialBMRState;\n    default:\n      return state;\n  }\n};\nexport const foodReducer = (state = initialFoodState, action) => {\n  switch (action.type) {\n    case 'SELECT_FOOD_TYPE':\n      return {\n        ...state,\n        selectedCategory: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const nutritionReducer = (state = initialNutritionState, action) => {\n  switch (action.type) {\n    case 'UPDATE_NUTRITION':\n      {\n        return action.payload;\n      }\n    case 'ADD_NUTRITION_ITEM':\n      {\n        return [...state, action.payload];\n      }\n    case 'REMOVE_NUTRITION':\n      return state.filter(item => item.id !== action.payload);\n    case 'RESET_NUTRITION':\n      return [];\n    default:\n      return state;\n  }\n};\nexport const nut_radarReducer = (state = initialNutRadarChartState, action) => {\n  switch (action.type) {\n    case 'NUT_RADAR_CHART':\n      return {\n        ...state,\n        nut_rader: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const date_radarReducer = (state = initialDateRadarChartState, action) => {\n  switch (action.type) {\n    case 'DATE_RADAR_CHART':\n      return {\n        ...state,\n        date_rader: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const week_lineReducer = (state = initialWeekLineChartState, action) => {\n  switch (action.type) {\n    case 'DATE_RADAR_CHART':\n      return {\n        ...state,\n        week_line: action.payload\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["initialDateRadarChartState","initialUserState","initialPostState","initialMenuState","initialModalState","initialBMIState","initialBMRState","initialFoodState","initialNutritionState","initialNutRadarChartState","initialWeekLineChartState","postsReducer","state","action","type","posts","payload","userReducer","email","password","token","menuReducer","modalReducer","isOpen","bmiReducer","height","weight","heightInMeters","bmi","bmicalculated","bmrReducer","age","gender","level","console","log","bmr","bmrcalculated","foodReducer","selectedCategory","nutritionReducer","filter","item","id","nut_radarReducer","nut_rader","date_radarReducer","date_rader","week_lineReducer","week_line"],"sources":["/usr/src/app/health-app/src/store/redux_reducer.ts"],"sourcesContent":["import { DateradarChart, initialDateRadarChartState, initialUserState, UserState} from './redux_action';\nimport {initialPostState, PostsState} from './redux_action';\nimport {initialMenuState, MenuState} from './redux_action';\nimport { initialModalState, ModalState } from './redux_action';\nimport { initialBMIState, BMIState } from './redux_action';\nimport { initialBMRState, BMRState } from './redux_action';\nimport { initialFoodState, FoodState } from './redux_action';\nimport { initialNutritionState, NutritionState } from './redux_action';\nimport { initialNutRadarChartState, SelectNutradarChart } from './redux_action';\nimport { initialWeekLineChartState, WeeklineChart } from './redux_action';\nimport {Action} from './redux_action';\n\n\nexport const postsReducer = (state = initialPostState, action: Action): PostsState => {\n  switch (action.type) {\n    case 'SET_POSTS':\n      return { ...state, posts: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userReducer = (state = initialUserState, action: Action): UserState => {\n  switch (action.type) {\n    case 'SET_USER_INFO':\n      return { ...state, email: action.payload.email, password: action.payload.password };\n    case 'SET_TOKEN':\n      return { ...state, token: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const menuReducer = (state = initialMenuState, action: Action): MenuState => {\n  switch (action.type) {\n    case 'TOGGLE_MENU':\n      return {\n        ...state,\n        [action.payload]: !state[action.payload],\n      };\n    default:\n      return state;\n  }\n};\n\nexport const modalReducer = (state = initialModalState, action: Action): ModalState => {\n  switch (action.type) {\n    case 'TOGGLE_MODAL':\n      return { ...state, isOpen: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const bmiReducer = (state= initialBMIState, action: Action): BMIState => {\n  switch (action.type) {\n    case 'SET_HEIGHT':\n      return { ...state, height: action.payload };\n    case 'SET_WEIGHT':\n      return { ...state, weight: action.payload };\n    case 'CALCULATE_BMI':\n      const heightInMeters = state.height / 100;\n      const bmi = state.weight / (heightInMeters * heightInMeters);\n      return { ...state, bmi, bmicalculated: true };\n    default:\n      return state;\n  }\n};\n\nexport const bmrReducer = (state = initialBMRState, action: Action): BMRState => {\n  switch (action.type) {\n    case 'SET_HEIGHT-BMR':\n      return { ...state, height: action.payload };\n    case 'SET_WEIGHT-BMR':\n      return { ...state, weight: action.payload };\n    case 'SET_AGE-BMR':\n      return { ...state, age: action.payload};\n    case 'SET_GENDER-BMR':\n      return { ...state, gender: action.payload};\n    case 'SET_LEVEL-BMR':\n      return { ...state, level: action.payload }\n    case 'CALCULATE_BMR':\n      const { height, weight, age, gender, level } = state;\n        console.log(height, weight, age, gender)\n        let bmr = null;\n        let bmrcalculated = false;\n        \n        if (gender === 'male') {\n          bmr = (10 * weight) + (6.25 * height) - (5 * age) + 5;\n          bmrcalculated = true;\n        } else if (gender === 'female') {\n          bmr = (10 * weight) + (6.25 * height) - (5 * age) - 161;\n          bmrcalculated = true;\n        }\n        console.log(bmr)\n        if(bmr !== null){\n          switch(level){\n            case \"level1\":\n              bmr = bmr * 1.2;\n              break;\n            case \"level2\":\n              bmr = bmr * 1.4;\n              break;\n            case \"level3\":\n              bmr = bmr * 1.6;\n              break;\n            case \"level4\":\n              bmr = bmr * 1.8;\n              break;\n            case \"level5\":\n              bmr = bmr * 1.9;\n              break;\n            default:\n              break;\n          }\n        }else{\n          console.log('bmr is null')\n        }\n        return {\n          ...state,\n          bmr,\n          bmrcalculated: true,\n        };\n\n    case 'RESET_BMR':\n      return initialBMRState;\n\n    default:\n      return state;\n  }\n};\n\nexport const foodReducer = (state = initialFoodState, action: Action): FoodState => {\n  switch (action.type) {\n    case 'SELECT_FOOD_TYPE':\n      return {\n        ...state,\n        selectedCategory: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\n\nexport const nutritionReducer = (state: NutritionState[] = initialNutritionState, action: Action & { payload?: any }): NutritionState[] => {\n  switch (action.type) {\n    case 'UPDATE_NUTRITION': {\n      return action.payload;\n    }\n    case 'ADD_NUTRITION_ITEM': {\n      return [\n        ...state,\n        action.payload\n      ];\n    }\n    case 'REMOVE_NUTRITION':\n      return state.filter((item) => item.id !== action.payload);\n    case 'RESET_NUTRITION':\n      return []\n    default:\n      return state;\n    \n    \n  }\n};\n\nexport const nut_radarReducer = (state = initialNutRadarChartState, action: any):  SelectNutradarChart => {\n  switch (action.type) {\n    case 'NUT_RADAR_CHART':\n      return { ...state, nut_rader: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const date_radarReducer = (state = initialDateRadarChartState, action: any):  DateradarChart => {\n  switch (action.type) {\n    case 'DATE_RADAR_CHART':\n      return { ...state, date_rader: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const week_lineReducer = (state = initialWeekLineChartState, action: any):  WeeklineChart => {\n  switch (action.type) {\n    case 'DATE_RADAR_CHART':\n      return { ...state, week_line: action.payload };\n    default:\n      return state;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}