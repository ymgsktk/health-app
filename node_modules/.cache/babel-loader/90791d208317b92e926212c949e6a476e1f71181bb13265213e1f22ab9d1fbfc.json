{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/health-app/src/pages/dashboard/dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Radar } from 'react-chartjs-2';\nimport MainLayout from '../mainlayout';\nimport { updateNutrition } from '../../store/redux_action';\nimport { Chart as ChartJS, RadialLinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(RadialLinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst Dashboard = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [data, setData] = useState({\n    labels: [],\n    datasets: [{\n      label: 'Calories',\n      data: [],\n      fill: true,\n      backgroundColor: 'rgba(255, 99, 132, 0.2)',\n      borderColor: 'rgb(255, 99, 132)',\n      pointBackgroundColor: 'rgb(255, 99, 132)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgb(255, 99, 132)'\n    }]\n  });\n  const nutritionItems = useSelector(state => state.food);\n  console.log('food', nutritionItems);\n  useEffect(() => {\n    const savedNutritionItems = localStorage.getItem('nutritionItems');\n    if (savedNutritionItems) {\n      const parsedItems = JSON.parse(savedNutritionItems);\n      dispatch(updateNutrition(parsedItems));\n\n      // 個々のカロリーを表示するためのデータ準備\n      const labels = parsedItems.map(item => item.title); // 食事のタイトルやラベル\n      const caloriesData = parsedItems.map(item => item.calories); // 各食事のカロリー\n\n      setData({\n        labels,\n        datasets: [{\n          label: 'Calories',\n          data: caloriesData,\n          fill: true,\n          backgroundColor: 'rgba(255, 99, 132, 0.2)',\n          borderColor: 'rgb(255, 99, 132)',\n          pointBackgroundColor: 'rgb(255, 99, 132)',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgb(255, 99, 132)'\n        }]\n      });\n    }\n  }, [dispatch]);\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Calories Visualization'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dashboard Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to the dashboard.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"\\u65E5\\u4ED8\\uFF1A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"date\",\n          className: \"select-kind\",\n          type: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radar-chart\",\n        children: /*#__PURE__*/_jsxDEV(Radar, {\n          data: data,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"NUih0mOMQRB29ns8q8KJQnF0Ezk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","Radar","MainLayout","updateNutrition","Chart","ChartJS","RadialLinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","jsxDEV","_jsxDEV","register","Dashboard","_s","dispatch","data","setData","labels","datasets","label","fill","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","nutritionItems","state","food","console","log","savedNutritionItems","localStorage","getItem","parsedItems","JSON","parse","map","item","title","caloriesData","calories","options","responsive","plugins","legend","position","display","text","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","type","_c","$RefreshReg$"],"sources":["/usr/src/app/health-app/src/pages/dashboard/dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppState } from '../../store/redux_store';\nimport { Radar } from 'react-chartjs-2';\nimport MainLayout from '../mainlayout';\nimport { updateNutrition } from '../../store/redux_action';\nimport {\n  Chart as ChartJS,\n  RadialLinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n} from 'chart.js';\n\nChartJS.register(\n  RadialLinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\ninterface ChartData {\n  labels: string[];\n  datasets: {\n    label: string;\n    data: number[];\n    fill: boolean;\n    backgroundColor: string;\n    borderColor: string;\n    pointBackgroundColor: string;\n    pointBorderColor: string;\n    pointHoverBackgroundColor: string;\n    pointHoverBorderColor: string;\n  }[];\n}\n\nconst Dashboard: React.FC = () => {\n  const dispatch = useDispatch();\n  const [data, setData] = useState<ChartData>({\n    labels: [],\n    datasets: [\n      {\n        label: 'Calories',\n        data: [],\n        fill: true,\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\n        borderColor: 'rgb(255, 99, 132)',\n        pointBackgroundColor: 'rgb(255, 99, 132)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgb(255, 99, 132)'\n      }\n    ]\n  });\n\n  const nutritionItems = useSelector((state: AppState) => state.food);\n  console.log('food', nutritionItems);\n\n  useEffect(() => {\n    const savedNutritionItems = localStorage.getItem('nutritionItems');\n    if (savedNutritionItems) {\n      const parsedItems = JSON.parse(savedNutritionItems);\n      dispatch(updateNutrition(parsedItems));\n\n      // 個々のカロリーを表示するためのデータ準備\n      const labels = parsedItems.map((item: any) => item.title); // 食事のタイトルやラベル\n      const caloriesData = parsedItems.map((item: any) => item.calories); // 各食事のカロリー\n\n      setData({\n        labels,\n        datasets: [\n          {\n            label: 'Calories',\n            data: caloriesData,\n            fill: true,\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderColor: 'rgb(255, 99, 132)',\n            pointBackgroundColor: 'rgb(255, 99, 132)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgb(255, 99, 132)'\n          }\n        ]\n      });\n    }\n  }, [dispatch]);\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top' as const\n      },\n      title: {\n        display: true,\n        text: 'Calories Visualization'\n      }\n    }\n  };\n\n  return (\n    <MainLayout>\n      <div>\n        <h1>Dashboard Page</h1>\n        <p>Welcome to the dashboard.</p>\n        <div className='date-div'>\n          <label className='label'>日付：</label>\n          <input id='date' className='select-kind' type=\"date\" />\n        </div>\n        <div className='radar-chart'>\n          <Radar data={data} options={options} />\n        </div>\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}