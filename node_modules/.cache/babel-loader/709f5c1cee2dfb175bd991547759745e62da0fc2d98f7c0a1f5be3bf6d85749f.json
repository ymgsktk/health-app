{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/health-app/src/pages/dashboard/bar-chart.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { format } from \"date-fns\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Bar } from 'react-chartjs-2';\nimport './dashboard.css';\nimport { setDateBar } from '../../store/redux_action';\nimport { Chart as ChartJS, RadialLinearScale, PointElement, CategoryScale, LineElement, BarElement, LinearScale, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(RadialLinearScale, PointElement, LineElement, BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend, Filler);\nconst Barchart = () => {\n  _s();\n  const dispatch = useDispatch();\n  const selectNut_bar = useSelector(state => state.nut_bar);\n  const selectDate_bar = useSelector(state => state.date_bar);\n  const initialDate = selectDate_bar.date_bar ? new Date(selectDate_bar.date_bar) : format(new Date(), \"yyyy/MM/dd\");\n  console.log(\"aa\", initialDate);\n  const data = {\n    labels: ['January', 'February', 'March', 'April'],\n    datasets: [{\n      label: 'Product A',\n      data: [75, 49, 70, 91],\n      backgroundColor: 'rgba(255, 99, 132, 0.6)'\n    }, {\n      label: 'Product B',\n      data: [75, 49, 70, 91],\n      backgroundColor: 'rgba(54, 162, 235, 0.6)'\n    }, {\n      label: 'Product C',\n      data: [55, 39, 60, 71],\n      backgroundColor: 'rgba(75, 192, 192, 0.6)'\n    }, {\n      label: 'Product D',\n      data: [85, 69, 90, 101],\n      backgroundColor: 'rgba(153, 102, 255, 0.6)'\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'カロリー摂取量の統計'\n      }\n    },\n    scales: {\n      x: {\n        stacked: false,\n        categoryPercentage: 0.6,\n        // 棒グラフの幅\n        barPercentage: 0.8 // 棒グラフの間隔\n      },\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  const handleMonthChange = date => {\n    if (date) {\n      dispatch(setDateBar(format(date, \"yyyy/MM/dd\")));\n    }\n  };\n\n  /*const handleMonthChange = (date: Date | null) => {\n      if (date) {\n        //dispatch(setDateBar(format(date, \"yyyy/MM/dd\")));\n      }\n    };*/\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: new Date(selectDate_bar.date_bar),\n      onChange: handleMonthChange,\n      dateFormat: \"yyyy/MM/dd\",\n      showMonthYearPicker: true,\n      showFullMonthYearPicker: true,\n      placeholderText: \"Select a month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(Barchart, \"auw3Mxp2NJmoVO1i1NTRK7/es2g=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Barchart;\nexport default Barchart;\nvar _c;\n$RefreshReg$(_c, \"Barchart\");","map":{"version":3,"names":["React","DatePicker","format","useDispatch","useSelector","Bar","setDateBar","Chart","ChartJS","RadialLinearScale","PointElement","CategoryScale","LineElement","BarElement","LinearScale","Title","Tooltip","Legend","Filler","jsxDEV","_jsxDEV","register","Barchart","_s","dispatch","selectNut_bar","state","nut_bar","selectDate_bar","date_bar","initialDate","Date","console","log","data","labels","datasets","label","backgroundColor","options","responsive","plugins","legend","position","title","display","text","scales","x","stacked","categoryPercentage","barPercentage","y","beginAtZero","handleMonthChange","date","children","selected","onChange","dateFormat","showMonthYearPicker","showFullMonthYearPicker","placeholderText","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/usr/src/app/health-app/src/pages/dashboard/bar-chart.tsx"],"sourcesContent":["import React, { useEffect,useState,useMemo } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { format } from \"date-fns\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppState } from '../../store/redux_store';\nimport { Radar, Line, Bar } from 'react-chartjs-2';\nimport MainLayout from '../mainlayout';\nimport './dashboard.css'\nimport { setDateLine, setDateRadar , setNutLine, setNutRadar, setWeekLine, setDateBar,setNutBar} from '../../store/redux_action';\nimport {store} from '../../store/redux_store';\nimport {\n  Chart as ChartJS,\n  RadialLinearScale,\n  PointElement,\n  CategoryScale,\n  LineElement,\n  BarElement,\n  LinearScale,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n  TooltipItem, \n  TooltipModel \n} from 'chart.js';\n\nChartJS.register(\n  RadialLinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  CategoryScale,\n  LinearScale, \n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nconst Barchart = () => {\n    const dispatch = useDispatch();\n    const selectNut_bar = useSelector((state: AppState) => state.nut_bar);\n    const selectDate_bar = useSelector((state: AppState) => state.date_bar);\n    const initialDate = selectDate_bar.date_bar ? new Date(selectDate_bar.date_bar) : format(new Date(), \"yyyy/MM/dd\");\n    console.log(\"aa\",initialDate)\n    const data = {\n        labels: ['January', 'February', 'March', 'April'],\n        datasets: [\n          {\n            label: 'Product A',\n            data: [75, 49, 70, 91],\n            backgroundColor: 'rgba(255, 99, 132, 0.6)',\n          },\n          {\n            label: 'Product B',\n            data: [75, 49, 70, 91],\n            backgroundColor: 'rgba(54, 162, 235, 0.6)',\n          },\n          {\n            label: 'Product C',\n            data: [55, 39, 60, 71],\n            backgroundColor: 'rgba(75, 192, 192, 0.6)',\n          },\n          {\n            label: 'Product D',\n            data: [85, 69, 90, 101],\n            backgroundColor: 'rgba(153, 102, 255, 0.6)',\n          },\n        ],\n      };\n    \n      const options = {\n        responsive: true,\n        plugins: {\n        legend: {\n            position: 'top' as const,\n        },\n        title: {\n            display: true,\n            text: 'カロリー摂取量の統計',\n        },\n        },\n        scales: {\n        x: {\n            stacked: false,\n            categoryPercentage: 0.6, // 棒グラフの幅\n            barPercentage: 0.8, // 棒グラフの間隔\n        },\n        y: {\n            beginAtZero: true,\n        },\n        },\n    };\n      \n    const handleMonthChange = (date: Date | null) => {\n        if (date) {\n          dispatch(setDateBar(format(date, \"yyyy/MM/dd\")));\n        }\n      };\n\n    /*const handleMonthChange = (date: Date | null) => {\n        if (date) {\n          //dispatch(setDateBar(format(date, \"yyyy/MM/dd\")));\n        }\n      };*/\n    return (\n    <div>\n        <DatePicker\n        selected={new Date(selectDate_bar.date_bar)}\n        onChange={handleMonthChange}\n        dateFormat=\"yyyy/MM/dd\"\n        showMonthYearPicker\n        showFullMonthYearPicker\n        placeholderText=\"Select a month\"\n        />\n        <div>\n            <Bar data={data} options={options}/>\n        </div>\n    </div>\n    );\n};\n\nexport default Barchart;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAsC,OAAO;AACzD,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,4CAA4C;AACnD,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAAsBC,GAAG,QAAQ,iBAAiB;AAElD,OAAO,iBAAiB;AACxB,SAA2EC,UAAU,QAAiB,0BAA0B;AAEhI,SACEC,KAAK,IAAIC,OAAO,EAChBC,iBAAiB,EACjBC,YAAY,EACZC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,MAAM,QAGD,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElBZ,OAAO,CAACa,QAAQ,CACdZ,iBAAiB,EACjBC,YAAY,EACZE,WAAW,EACXC,UAAU,EACVF,aAAa,EACbG,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,MACF,CAAC;AAED,MAAMI,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGrB,WAAW,CAAC,CAAC;EAC9B,MAAMsB,aAAa,GAAGrB,WAAW,CAAEsB,KAAe,IAAKA,KAAK,CAACC,OAAO,CAAC;EACrE,MAAMC,cAAc,GAAGxB,WAAW,CAAEsB,KAAe,IAAKA,KAAK,CAACG,QAAQ,CAAC;EACvE,MAAMC,WAAW,GAAGF,cAAc,CAACC,QAAQ,GAAG,IAAIE,IAAI,CAACH,cAAc,CAACC,QAAQ,CAAC,GAAG3B,MAAM,CAAC,IAAI6B,IAAI,CAAC,CAAC,EAAE,YAAY,CAAC;EAClHC,OAAO,CAACC,GAAG,CAAC,IAAI,EAACH,WAAW,CAAC;EAC7B,MAAMI,IAAI,GAAG;IACTC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,CAAC;IACjDC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,WAAW;MAClBH,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MACtBI,eAAe,EAAE;IACnB,CAAC,EACD;MACED,KAAK,EAAE,WAAW;MAClBH,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MACtBI,eAAe,EAAE;IACnB,CAAC,EACD;MACED,KAAK,EAAE,WAAW;MAClBH,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MACtBI,eAAe,EAAE;IACnB,CAAC,EACD;MACED,KAAK,EAAE,WAAW;MAClBH,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;MACvBI,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACTC,MAAM,EAAE;QACJC,QAAQ,EAAE;MACd,CAAC;MACDC,KAAK,EAAE;QACHC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACV;IACA,CAAC;IACDC,MAAM,EAAE;MACRC,CAAC,EAAE;QACCC,OAAO,EAAE,KAAK;QACdC,kBAAkB,EAAE,GAAG;QAAE;QACzBC,aAAa,EAAE,GAAG,CAAE;MACxB,CAAC;MACDC,CAAC,EAAE;QACCC,WAAW,EAAE;MACjB;IACA;EACJ,CAAC;EAED,MAAMC,iBAAiB,GAAIC,IAAiB,IAAK;IAC7C,IAAIA,IAAI,EAAE;MACR/B,QAAQ,CAAClB,UAAU,CAACJ,MAAM,CAACqD,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC;IAClD;EACF,CAAC;;EAEH;AACJ;AACA;AACA;AACA;EACI,oBACAnC,OAAA;IAAAoC,QAAA,gBACIpC,OAAA,CAACnB,UAAU;MACXwD,QAAQ,EAAE,IAAI1B,IAAI,CAACH,cAAc,CAACC,QAAQ,CAAE;MAC5C6B,QAAQ,EAAEJ,iBAAkB;MAC5BK,UAAU,EAAC,YAAY;MACvBC,mBAAmB;MACnBC,uBAAuB;MACvBC,eAAe,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACF9C,OAAA;MAAAoC,QAAA,eACIpC,OAAA,CAACf,GAAG;QAAC6B,IAAI,EAAEA,IAAK;QAACK,OAAO,EAAEA;MAAQ;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAC3C,EAAA,CAjFID,QAAQ;EAAA,QACOnB,WAAW,EACNC,WAAW,EACVA,WAAW;AAAA;AAAA+D,EAAA,GAHhC7C,QAAQ;AAmFd,eAAeA,QAAQ;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}