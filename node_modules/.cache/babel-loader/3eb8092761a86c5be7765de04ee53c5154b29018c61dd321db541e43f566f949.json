{"ast":null,"code":"import axios from 'axios';\nimport MockAdapter from 'axios-mock-adapter';\nconst api = axios.create({\n  baseURL: 'http://localhost:3001'\n});\nconst mock = new MockAdapter(api);\nconst USER_INFO = {\n  token: \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxMyIsImp0aSI6IjM1ZmI5OTgyM2YzNWJhMDU4ZDM2MDYxNmMxMmQ0NTViN2U1NDhjZWFlOGJlMjJkYTRhMjNlMDRiMTdhZTJkYTcyZGI2YThlYTVmYmFlNTUzIiwiaWF0IjoxNzIzNjI4OTQxLCJuYmYiOjE3MjM2Mjg5NDEsImV4cCI6MTc1NTE2NDk0MSwic3ViIjoiMTgzNzYxIiwic2NvcGVzIjpbXX0.OD0-b8Uz8uFpbadgFpR-Edac_l7IeJ41JH8wf8H8q5tjkJJrWEjnEIR7hNUMtjmgszYNzlLDtIFBb1pHsHDn6PPrtFYg4ioioAqmPlVjIV8WYUV7TjSLaxcSohO4rudbTMbmT7-gDz61Xtz9_HdCWOmMOuBq65FEux-e3PS6-XLDl0hAAjBp-11G8jUoEdnyrCXD6hux56bR_wFX0KeaDsAtUE_oXIA2AN1pJ4ZNO9aJmMdi7_xT3hA4RNrSmUnmBY7-U-tESZG6A19ZftYVxteEZDHdgaPe3wTyUYZlADpcrzMt6KfMJ_WjZvgshElZTYh2vyxTVlmpcNmg__QRuQwlfG96Q_2D7NF8nppiwm7uQT3ma6UDnD0_EW2skA8qWEaIyWCwNlRsNyHGbqeB5nW-XD9jrIUyf7fHkzBEw_-qFFXQmFuEy5VKalDs-sZZEmn53UdoUTf9MpITtgtUkkftVCi0vK3J3i0oLvS_7lTFbvfNdL0GanQhj_xoOeRYH_CO1UOzP_GhpdyqTCoOZIHhRTCDiNXzndgQmj7hI_uHBHsuDLE3P58-0rgUJp_QaNUmIpwYu2ycTWBsCjbWarYh0XfP_XFPzjRt1K6AgWzaeJYTdqQd4xErY3ELSShRiy-lXO4rV3gljEg6ZZ8jwU9VPPnGg17f1J7t5tNoYtk\",\n  email: \"yamagishi@rikkeisoft.com\",\n  password: \"12345678\"\n};\nmock.onPost('/user1').reply(config => {\n  const {\n    email,\n    password\n  } = JSON.parse(config.data);\n  if (email === USER_INFO.email && password === USER_INFO.password) {\n    return [200, {\n      token: USER_INFO.token,\n      message: `Login success`\n    }];\n  } else if (email !== USER_INFO.email || password !== USER_INFO.password) {\n    return [200, {\n      messageErr: 'Invalid email or password',\n      token: null\n    }];\n  } else {\n    return [400, {\n      messageErr: 'exception'\n    }];\n  }\n});\nexport const login = async (email, password) => {\n  try {\n    const response = await api.post('/user1', {\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('login Failed');\n  }\n};\nconst posts = [{\n  id: 1,\n  title: \"Yamagishi Katsuki\",\n  teamdescription: \"Ant Design, a design language for backgraound applications, is refined by AntUED Team.\",\n  description: \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\",\n  imageUrl: \"https://www.kenkomayo.com/img/goods/L/recipe12920-002_85506bdb685f4f009a5c11c2f93a7396.jpg\",\n  iconUrl: \"https://kotonohaworks.com/free-icons/wp-content/uploads/kkrn_icon_user_1.png\",\n  star: 156,\n  likes: 156,\n  comments: 2,\n  date: \"2024/8/21\"\n}, {\n  id: 2,\n  title: \"ant design part 10\",\n  teamdescription: \"Ant Design, a design language for backgraound applications, is refined by AntUED Team.\",\n  description: \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\",\n  imageUrl: \"https://rimage.gnst.jp/livejapan.com/public/article/detail/a/00/03/a0003440/img/basic/a0003440_main.jpg\",\n  iconUrl: \"https://kotonohaworks.com/free-icons/wp-content/uploads/kkrn_icon_user_2.png\",\n  star: 156,\n  likes: 156,\n  comments: 2,\n  date: \"2024/8/20\"\n}, {\n  id: 3,\n  title: \"ant design part 11\",\n  teamdescription: \"Ant Design, a design language for backgraound applications, is refined by AntUED Team.\",\n  description: \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\",\n  imageUrl: \"https://static.vinwonders.com/production/com-ga-nha-trang-banner-1.jpg\",\n  iconUrl: \"https://kotonohaworks.com/free-icons/wp-content/uploads/kkrn_icon_user_3.png\",\n  star: 156,\n  likes: 156,\n  comments: 2,\n  date: \"2024/8/19\"\n}];\nmock.onGet('/posts').reply(200, posts);\nexport const fetchPosts = async () => {\n  try {\n    const response = await api.get('/posts');\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch posts');\n  }\n};\nconst menus = [{\n  id: 1,\n  title: \"hamburger steak\",\n  description: \"juicy steak\",\n  imageUrl: \"https://vietnam-sketch.com/wp-content/uploads/2023/02/thumbnail-90948.png\",\n  calorie: 270,\n  protein: 16\n}, {\n  id: 2,\n  title: \"Salad\",\n  description: \"salad\",\n  imageUrl: \"https://example.com/salad.jpg\",\n  calorie: 150,\n  protein: 5\n}, {\n  id: 3,\n  title: \"Chicken Breast\",\n  description: \"high protein\",\n  imageUrl: \"https://example.com/chicken.jpg\",\n  calorie: 200,\n  protein: 31\n}, {\n  id: 4,\n  title: \"Pasta\",\n  description: \"yummy pasta\",\n  imageUrl: \"https://example.com/pasta.jpg\",\n  calorie: 350,\n  protein: 12\n}];\nexport const fetchrecommend = async bmi => {\n  console.log(bmi);\n  try {\n    const response = await api.post('/recommemd', {\n      bmi\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Menu cannot find');\n  }\n};\nmock.onPost('/recommend').reply(config => {\n  try {\n    const {\n      bmi\n    } = JSON.parse(config.data);\n    let filteredMenus = [];\n    if (bmi < 18.5) {\n      filteredMenus = menus.filter(menu => menu.calorie >= 300);\n    } else if (bmi >= 18.5 && bmi < 25) {\n      filteredMenus = menus.filter(menu => menu.calorie >= 200 && menu.calorie < 300);\n    } else {\n      filteredMenus = menus.filter(menu => menu.calorie < 200 && menu.protein >= 15);\n    }\n    return [200, filteredMenus];\n  } catch (error) {\n    throw new Error('Cannot find recommend menus');\n  }\n});","map":{"version":3,"names":["axios","MockAdapter","api","create","baseURL","mock","USER_INFO","token","email","password","onPost","reply","config","JSON","parse","data","message","messageErr","login","response","post","error","Error","posts","id","title","teamdescription","description","imageUrl","iconUrl","star","likes","comments","date","onGet","fetchPosts","get","menus","calorie","protein","fetchrecommend","bmi","console","log","filteredMenus","filter","menu"],"sources":["/usr/src/app/health-app/src/API/apidata-post.ts"],"sourcesContent":["import axios from 'axios';\nimport MockAdapter from 'axios-mock-adapter';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3001',\n});\n\nconst mock = new MockAdapter(api);\n\nconst USER_INFO = {\n  token: \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxMyIsImp0aSI6IjM1ZmI5OTgyM2YzNWJhMDU4ZDM2MDYxNmMxMmQ0NTViN2U1NDhjZWFlOGJlMjJkYTRhMjNlMDRiMTdhZTJkYTcyZGI2YThlYTVmYmFlNTUzIiwiaWF0IjoxNzIzNjI4OTQxLCJuYmYiOjE3MjM2Mjg5NDEsImV4cCI6MTc1NTE2NDk0MSwic3ViIjoiMTgzNzYxIiwic2NvcGVzIjpbXX0.OD0-b8Uz8uFpbadgFpR-Edac_l7IeJ41JH8wf8H8q5tjkJJrWEjnEIR7hNUMtjmgszYNzlLDtIFBb1pHsHDn6PPrtFYg4ioioAqmPlVjIV8WYUV7TjSLaxcSohO4rudbTMbmT7-gDz61Xtz9_HdCWOmMOuBq65FEux-e3PS6-XLDl0hAAjBp-11G8jUoEdnyrCXD6hux56bR_wFX0KeaDsAtUE_oXIA2AN1pJ4ZNO9aJmMdi7_xT3hA4RNrSmUnmBY7-U-tESZG6A19ZftYVxteEZDHdgaPe3wTyUYZlADpcrzMt6KfMJ_WjZvgshElZTYh2vyxTVlmpcNmg__QRuQwlfG96Q_2D7NF8nppiwm7uQT3ma6UDnD0_EW2skA8qWEaIyWCwNlRsNyHGbqeB5nW-XD9jrIUyf7fHkzBEw_-qFFXQmFuEy5VKalDs-sZZEmn53UdoUTf9MpITtgtUkkftVCi0vK3J3i0oLvS_7lTFbvfNdL0GanQhj_xoOeRYH_CO1UOzP_GhpdyqTCoOZIHhRTCDiNXzndgQmj7hI_uHBHsuDLE3P58-0rgUJp_QaNUmIpwYu2ycTWBsCjbWarYh0XfP_XFPzjRt1K6AgWzaeJYTdqQd4xErY3ELSShRiy-lXO4rV3gljEg6ZZ8jwU9VPPnGg17f1J7t5tNoYtk\",\n  email: \"yamagishi@rikkeisoft.com\",\n  password: \"12345678\"\n};\n\nmock.onPost('/user1').reply((config) => {\n  const { email, password } = JSON.parse(config.data);\n  if (email === USER_INFO.email && password === USER_INFO.password) {\n    return [200, { token: USER_INFO.token, message:`Login success` }];\n  }else if(email !== USER_INFO.email || password !== USER_INFO.password){\n    return [200, { messageErr: 'Invalid email or password', token: null}];\n  }else{\n    return [400, { messageErr: 'exception' }];\n  }\n  \n});\n\nexport const login = async (email: string, password: string) => {\n  try {\n  const response = await api.post('/user1', { email, password });\n  return response.data;\n  } catch (error) {\n    throw new Error('login Failed');\n  }\n};\n\n\nconst posts = [\n  {\n    id: 1,\n    title: \"Yamagishi Katsuki\",\n    teamdescription: \"Ant Design, a design language for backgraound applications, is refined by AntUED Team.\",\n    description: \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\",\n    imageUrl: \"https://www.kenkomayo.com/img/goods/L/recipe12920-002_85506bdb685f4f009a5c11c2f93a7396.jpg\",\n    iconUrl: \"https://kotonohaworks.com/free-icons/wp-content/uploads/kkrn_icon_user_1.png\",\n    star: 156,\n    likes: 156,\n    comments: 2,\n    date: \"2024/8/21\",\n  },\n  {\n    id: 2,\n    title: \"ant design part 10\",\n    teamdescription: \"Ant Design, a design language for backgraound applications, is refined by AntUED Team.\",\n    description: \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\",\n    imageUrl: \"https://rimage.gnst.jp/livejapan.com/public/article/detail/a/00/03/a0003440/img/basic/a0003440_main.jpg\",\n    iconUrl: \"https://kotonohaworks.com/free-icons/wp-content/uploads/kkrn_icon_user_2.png\",\n    star: 156,\n    likes: 156,\n    comments: 2,\n    date: \"2024/8/20\",\n  },\n  {\n    id: 3,\n    title: \"ant design part 11\",\n    teamdescription: \"Ant Design, a design language for backgraound applications, is refined by AntUED Team.\",\n    description: \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\",\n    imageUrl: \"https://static.vinwonders.com/production/com-ga-nha-trang-banner-1.jpg\",\n    iconUrl: \"https://kotonohaworks.com/free-icons/wp-content/uploads/kkrn_icon_user_3.png\",\n    star: 156,\n    likes: 156,\n    comments: 2,\n    date: \"2024/8/19\",\n  }\n];\n\nmock.onGet('/posts').reply(200, posts);\n\nexport const fetchPosts = async () => {\n  try {\n    const response = await api.get('/posts');\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch posts');\n  }\n};\n\nconst menus = [\n  {\n    id: 1,\n    title: \"hamburger steak\",\n    description: \"juicy steak\",\n    imageUrl: \"https://vietnam-sketch.com/wp-content/uploads/2023/02/thumbnail-90948.png\",\n    calorie: 270,\n    protein: 16,\n  },\n  {\n    id: 2,\n    title: \"Salad\",\n    description: \"salad\",\n    imageUrl: \"https://example.com/salad.jpg\",\n    calorie: 150,\n    protein: 5,\n  },\n  {\n    id: 3,\n    title: \"Chicken Breast\",\n    description: \"high protein\",\n    imageUrl: \"https://example.com/chicken.jpg\",\n    calorie: 200,\n    protein: 31,\n  },\n  {\n    id: 4,\n    title: \"Pasta\",\n    description: \"yummy pasta\",\n    imageUrl: \"https://example.com/pasta.jpg\",\n    calorie: 350,\n    protein: 12,\n  },\n]\n\nexport const fetchrecommend = async (bmi: number) => {\n  console.log(bmi)\n  try {\n    const response = await api.post('/recommemd', { bmi });\n    return response.data;\n    } catch (error) {\n      throw new Error('Menu cannot find');\n    }\n};\n\nmock.onPost('/recommend').reply((config) => {\n  try {\n  const { bmi } = JSON.parse(config.data);\n  let filteredMenus = [];\n  if (bmi < 18.5) {\n    filteredMenus = menus.filter(menu => menu.calorie >= 300);\n  } else if (bmi >= 18.5 && bmi < 25) {\n    filteredMenus =  menus.filter(menu => menu.calorie >= 200 && menu.calorie < 300);\n  } else {\n    filteredMenus =  menus.filter(menu => menu.calorie < 200 && menu.protein >= 15);\n  }\n  return [200, filteredMenus];\n  }catch (error) {\n    throw new Error('Cannot find recommend menus');\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}